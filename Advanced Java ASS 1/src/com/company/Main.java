package com.company;import java.io.File;import java.io.IOException;import java.io.PrintWriter;import java.nio.file.Files;import java.nio.file.Paths;import java.util.Arrays;import java.util.List;public class Main {    public static PrintWriter pw;    public static int X;    public static int serial;    public static void main(String[] args) throws IOException {        System.out.println("\nPlease wait, File reading started....\n");        /*read the data file from sentences.csv*/        List<String> data = Files.readAllLines(Paths.get("sentences.csv"));        /*read the search file for the key words*/        List<String> serchLIst = Files.readAllLines(Paths.get("search.txt"));        System.out.println("File read successfully....\n\nOutput.txt creating...\n");        int i=0,X=1;        /*if output file created for all the key word  then terminate the while loop*/        while(i <serchLIst.size()){            /* store the key word in local variable v */            String v = serchLIst.get(i);            StringBuilder match_text=new StringBuilder();            /*create new file for every key word as output(X).txt */            File file = new File("output"+X+".txt");            pw = new PrintWriter(file);            /*if file is not exist then create a new one for store the output */            if(!file.exists()){                file.createNewFile();            }            /* calculate the search time for every key word */            long start = System.currentTimeMillis();            serial = 0;            /*used forEach and lambdaExpression instead of loop */            data.forEach(value ->{                /* remove the serial and language code from the sentence */                String[] arr =value.split("\\s");                List<String> temp = Arrays.asList(arr);                String temp1 = String.join(" ",temp.subList(2,temp.size()));                if(temp1.contains(v)){                    match_text.append(serial).append(". ").append(temp1).append("\n");                    serial++;                }            });            long end = System.currentTimeMillis();            /*start the file with key word and total milliseconds needed for find the match sentences*/            pw.println("Key word :  "+v+"\n"+"Time : "+(end-start)+" milliseconds\n");            /*write all the match sentences to the outputX.txt file*/            pw.print(match_text);            System.out.println("output"+X+".txt created successfully,,,,");            /* finally close the file for every key word */            pw.close();            X++;            i++;        }        System.out.println("\nAll output generated....");    }}